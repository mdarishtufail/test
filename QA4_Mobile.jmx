<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">You can run me using: jmeter -Jthreads=&lt;Number of threads&gt; -Jrampup=&lt;rampup in seconds&gt; -Jduration=&lt;duration in seconds&gt; -Jiterations=&lt;Number of iterations, -1 means infinite&gt; -e -o &lt;report output folder&gt;</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP CookieManager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T13:06:02.0681508</stringProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="QA4 Milfe Login" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Constant_ThinkTime" elementType="Argument">
              <stringProp name="Argument.name">Constant_ThinkTime</stringProp>
              <stringProp name="Argument.value">2500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Variable_ThinkTime" elementType="Argument">
              <stringProp name="Argument.name">Variable_ThinkTime</stringProp>
              <stringProp name="Argument.value">2500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Pacing" elementType="Argument">
              <stringProp name="Argument.name">Pacing</stringProp>
              <stringProp name="Argument.value">${__Random(2500,5000,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Param_Password" elementType="Argument">
              <stringProp name="Argument.name">Param_Password</stringProp>
              <stringProp name="Argument.value">Password123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Param_VendorKey1" elementType="Argument">
              <stringProp name="Argument.name">Param_VendorKey1</stringProp>
              <stringProp name="Argument.value">assa</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Param_VendorKey2" elementType="Argument">
              <stringProp name="Argument.name">Param_VendorKey2</stringProp>
              <stringProp name="Argument.value">dorma</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Param_Username" enabled="true">
          <stringProp name="filename">QA4_Customers.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="variableNames">Param_Username</stringProp>
          <boolProp name="randomOrder">true</boolProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="rewindOnTheEndOfList">true</boolProp>
          <boolProp name="independentListPerThread">false</boolProp>
        </com.blazemeter.jmeter.RandomCSVDataSetConfig>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">&quot;${__RandomString(5,abcdefghijklmnopqrstuvwxyz123456789,Param_VendorId)}&quot;;
&quot;${__RandomString(5,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz,Param_DeviceToken)}&quot;;
&quot;${__RandomString(6,abcdefghijklmnopqrstuvwxyz,Param_DeviceName)}&quot;;
&quot;${__timeShift(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,,,,Param_Timestamp)}&quot;;</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TXN_01_Mobile_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetClubBars" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GetClubBars($search: String) {\n  __typename\n  getClubBars(queryParams: {search: $search}) {\n    __typename\n    ...ClubBarBasic\n    images {\n      __typename\n      ...ImagesFields\n    }\n  }\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}\n\nfragment ClubBarBasic on ClubBar {\n  __typename\n  id\n  path\n  name\n  propertyId\n  tags\n  location {\n    __typename\n    latitude\n    longitude\n    address\n  }\n  reopenDate\n  dailyHours {\n    __typename\n    operatingStatus\n    sunday: sunday {\n      __typename\n      ...OpeningHoursFields\n    }\n    monday: monday {\n      __typename\n      ...OpeningHoursFields\n    }\n    tuesday: tuesday {\n      __typename\n      ...OpeningHoursFields\n    }\n    wednesday: wednesday {\n      __typename\n      ...OpeningHoursFields\n    }\n    thursday: thursday {\n      __typename\n      ...OpeningHoursFields\n    }\n    friday: friday {\n      __typename\n      ...OpeningHoursFields\n    }\n    saturday: saturday {\n      __typename\n      ...OpeningHoursFields\n    }\n  }\n}\n\nfragment OpeningHoursFields on OpeningHours {\n  __typename\n  hoursType\n  opening1\n  closing1\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:30:58.7539387</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">d60effb4-9518-43ba-8147-5f7234d2dbc7</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1270</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:30:58.7651071</stringProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_MGMCorrelationID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">Corr_MGMCorrelationID</stringProp>
              <stringProp name="RegexExtractor.regex">x-correlation-id: (.*?)\n</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Na</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-969207284">getClubBars</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_properties" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_properties($destination: String, $search: String) {\n  __typename\n  getProperties(destination: $destination, queryParams: {search: $search}) {\n    __typename\n    ...PropertyFields\n  }\n}\n\nfragment PropertyFields on Property {\n  __typename\n  id\n  propertyId\n  propertyKey\n  operaPropertyCode\n  name\n  shortName\n  images {\n    __typename\n    ...ImagesFields\n  }\n  region\n  regionName\n  timezone\n  digitalKeyVendor\n  phoneNumber {\n    __typename\n    reservationsNumber\n  }\n  websiteUrl\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:12.0302412</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_MGMCorrelationID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">686</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:12.0302412</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1223801559">getProperties</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetRestaurants" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GetRestaurants($search: String) {\n  __typename\n  getRestaurants(queryParams: {search: $search}) {\n    __typename\n    ...RestaurantBasic\n    images {\n      __typename\n      ...ImagesFields\n    }\n  }\n}\n\nfragment RestaurantBasic on Restaurant {\n  __typename\n  priceRange\n  cuisine\n  bookingDestinationURL\n  mobileOrderingUrl\n  isSevenRoomsRestaurant\n  id\n  path\n  name\n  propertyId\n  tags\n  location {\n    __typename\n    latitude\n    longitude\n    address\n  }\n  reopenDate\n  dailyHours {\n    __typename\n    operatingStatus\n    sunday: sunday {\n      __typename\n      ...OpeningHoursFields\n    }\n    monday: monday {\n      __typename\n      ...OpeningHoursFields\n    }\n    tuesday: tuesday {\n      __typename\n      ...OpeningHoursFields\n    }\n    wednesday: wednesday {\n      __typename\n      ...OpeningHoursFields\n    }\n    thursday: thursday {\n      __typename\n      ...OpeningHoursFields\n    }\n    friday: friday {\n      __typename\n      ...OpeningHoursFields\n    }\n    saturday: saturday {\n      __typename\n      ...OpeningHoursFields\n    }\n  }\n}\n\nfragment OpeningHoursFields on OpeningHours {\n  __typename\n  hoursType\n  opening1\n  closing1\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:23.2066681</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_MGMCorrelationID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1382</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:23.2066681</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="247817120">getRestaurants</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_entertainment_schedules" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_entertainment_schedules($search: String, $startDate: String, $endDate: String) {\n  __typename\n  getEntertainmentSchedules(queryParams: {search: $search, startDate: $startDate, endDate: $endDate}) {\n    __typename\n    show {\n      __typename\n      id\n      path\n      name\n      propertyId\n      location {\n        __typename\n        latitude\n        longitude\n        address\n      }\n      tags\n      dailyHours {\n        __typename\n        operatingStatus\n        sunday: sunday {\n          __typename\n          ...OpeningHoursFields\n        }\n        monday: monday {\n          __typename\n          ...OpeningHoursFields\n        }\n        tuesday: tuesday {\n          __typename\n          ...OpeningHoursFields\n        }\n        wednesday: wednesday {\n          __typename\n          ...OpeningHoursFields\n        }\n        thursday: thursday {\n          __typename\n          ...OpeningHoursFields\n        }\n        friday: friday {\n          __typename\n          ...OpeningHoursFields\n        }\n        saturday: saturday {\n          __typename\n          ...OpeningHoursFields\n        }\n      }\n      images {\n        __typename\n        ...ImagesFields\n        ...UnifiedGallery\n        tile {\n          __typename\n          url\n        }\n      }\n      descriptions {\n        __typename\n        overview\n      }\n      startingPrice\n      bookableOnline\n      detailPageCorpURL\n      detailPageBrandURL\n      bookingDestinationURL\n    }\n    location {\n      __typename\n      latitude\n      longitude\n    }\n    showEventInfo\n  }\n}\n\nfragment OpeningHoursFields on OpeningHours {\n  __typename\n  hoursType\n  opening1\n  closing1\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}\n\nfragment UnifiedGallery on Images {\n  __typename\n  unifiedGallery {\n    __typename\n    type\n    hlsMultirateStreamURL\n    placeHolderImage {\n      __typename\n      url\n    }\n    caption\n    reference {\n      __typename\n      url\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:33.9902522</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_MGMCorrelationID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">2143</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:33.9913363</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="648139018">getEntertainmentSchedules</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_properties" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_properties($destination: String, $search: String) {\n  __typename\n  getProperties(destination: $destination, queryParams: {search: $search}) {\n    __typename\n    ...PropertyFields\n  }\n}\n\nfragment PropertyFields on Property {\n  __typename\n  id\n  propertyId\n  propertyKey\n  operaPropertyCode\n  name\n  shortName\n  images {\n    __typename\n    ...ImagesFields\n  }\n  region\n  regionName\n  timezone\n  digitalKeyVendor\n  phoneNumber {\n    __typename\n    reservationsNumber\n  }\n  websiteUrl\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:43.5927302</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_MGMCorrelationID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">686</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:31:43.5927302</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1223801559">getProperties</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/faq" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/faq</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:32:13.1789527</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:32:13.1789527</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v2/propertydetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/propertydetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:32:31.402711</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T19:32:31.402711</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="anon/user/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">identityapi-qa4.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/identity/authorization/v1/anon/user/token</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:33:34.8480218</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">identityapi-qa4.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:33:34.8500211</stringProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_AccessToken" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Corr_AccessToken</stringProp>
              <stringProp name="RegexExtractor.regex">access_token&quot;: &quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NA</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corr_CorrelationId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">Corr_CorrelationId</stringProp>
              <stringProp name="RegexExtractor.regex">x-correlation-id: (.*?)\n</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NA</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TXN_02_Mobile_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RecommendationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;idType&quot;:&quot;mLifeId&quot;,&quot;recommendationListId&quot;:&quot;0&quot;,&quot;propertyId&quot;:&quot;e2704b04-d515-45b0-8afd-4fa1424ff0a8&quot;,&quot;maxRecommendations&quot;:20,&quot;startsAt&quot;:&quot;2023-10-30&quot;,&quot;endsAt&quot;:&quot;2023-11-05&quot;,&quot;numberOfGuests&quot;:1},&quot;query&quot;:&quot;query RecommendationList($idType: String!, $propertyId: String!, $maxRecommendations: Int!, $startsAt: String!, $endsAt: String!, $numberOfGuests: Int!, $recommendationListId: String!) {\n  __typename\n  recommendationList(idType: $idType, propertyId: $propertyId, maxRecommendations: $maxRecommendations, startsAt: $startsAt, endsAt: $endsAt, numberOfGuests: $numberOfGuests, id: $recommendationListId) {\n    __typename\n    modelVersion\n    userType\n    recommendations {\n      __typename\n      ... on Restaurant {\n        priceRange\n        cuisine\n        isSevenRoomsRestaurant\n        id\n        path\n        name\n        propertyId\n        tags\n        reopenDate\n        images {\n          __typename\n          ...ImagesFields\n        }\n        contentType\n      }\n      ... on EntertainmentSchedule {\n        path\n        propertyId\n        name\n        id\n        image {\n          __typename\n          url\n        }\n        price {\n          __typename\n          startingPrice\n        }\n        showEventInfo\n      }\n    }\n  }\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mgm-nonprod-qa.apigee.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rec/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:06.1070186</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1428</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">mgm-nonprod-qa.apigee.net</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:06.1080171</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="212437359">modelVersion</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${Constant_ThinkTime}</stringProp>
              <stringProp name="RandomTimer.range">${Variable_ThinkTime}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="guided-sign-in" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${Param_Username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">identityapi-qa4.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/identity/directory/v2/guided-sign-in</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:29.0134437</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="integration_auth" elementType="Header">
                  <stringProp name="Header.name">integration_auth</stringProp>
                  <stringProp name="Header.value">bypass-automation</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">identityapi-qa4.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="x-acf-sensor-data" elementType="Header">
                  <stringProp name="Header.name">x-acf-sensor-data</stringProp>
                  <stringProp name="Header.value">3,a,ni3dfFkOWrYUn0eEVVSUo1MV3ocwBXlzw1Ui1FwXGjLmtaIEYsKWHw6bLK/ttqJaMBENavdp6Ti+B+S0QC9APDkvw8miF2nQc0BJsp8ZycrsjRaKB9sANPzlLWRVxAEElVkYmZV/Q5m90ZkKSeuUqN6YmS0d0MXPjXwZSQANFSU=,O961z7WEZDvoXEP60jOIdV0AQQGlcdcrPhdGSJX35UZ0rI/kmF9j52M7LatCInPLKgK0T0C2vxSA00PRKwUhgXm/0YhLkERopNV/ErlKwQxGIy0y6EB/dfJnictls9CcMob0J2boGruDsEYIvsHuNvBtbSyb+FXByy8knpsfer8=$eDiNeqT49qKyhYYuV1rFeGO2blPeWr5W3XZusforuMDDAP2u25rLMQS2G3ZgwVGnkxQGPWM1oDf53Kf5oOSTuhucKxfVvqt+riMOxZFPW78UyiGY25USNiyCH1w9yvNK+bNBSQc7LgP2ycwJaxVssdAhC+hlK88l2RVXEk3qxMv+oGQS2zxa3jleCzfOBQwqx6bzKgdfvsA5hnYTnaKDaN/CbhZA5Ww+eQffYG4OM2nxx9A/CQrD5az+HW71nyYu+7sUJiYLvESuSa9cP/0GV4SGIpdTSOmqOBD/grltUfzQ/1rb6mVmFUe2flWnMeAsgVmvu1dWzCMxpj/vqk78wizgNKkIBZg7DfVq9oDNdiB4EMJ3mHw7PFmoIuacHI7+kmqlbfqKcOlIk7t+LYgmTJi2t40Nb+HBhw58JdMpXSnSOIzUJZRCTFg9Lkf68sR42cM6hJwQPH/fkNNvFY3qZrCI6uiH7Et1LERFj4iYG0HbNmkAiQYffHbkM4L43bhqYAhBXVhco6mQ2egc2Suy3r+CrSJDUoI4idKen0+GV3S0aDi/AMcbCuGKAyU/IC1zqKmU90wGv4/PC45o4sRUllvcaQC+ILfEW29Q0pl4AKJXk+zh8//LOiOmUojRDWGKefNk2ws/bRidxUvA1zuHXIP+HLPS329usUblZF/ojp1hs6cITnADutnGKC/LD6zNYnctgJ2yfCfk3DXMlarASoBY86G7kMT+vh+SxP/WjDc2FqQSAljQOVNmKVAqMxLa/KhJWcc/AgxnGKciU7C3KK2PFq9QKaTv/tMwN4E182UGVA8PKg8xCwRKehiXXl8UDIxaB+l9DqN1aiEGIKmmefUTCCIRCmKoYfIlgaPzUz6StqhB+F29oJL9Wx6skFuSF0Jio14qpOJh9L0eoRv6rdoKoPUm8xF9x53wrVmI21Wx5EKykzNBV8M5D4mTwTQKZL/0nIaJolYKgNCa/ywNC0MDiyGngM6EdVylTMLHs8eBR7UvN4vnVncISTYQuNwUSQomif7tqJZsP4TH8/Lh4ELrLp1utXtAoEfDEkrkRnVd+SMZp86ikhMMFzPdKqCUfX0TmCQgynKmywS7q5ew1FJ4/J9g4dNfynGD4Pymjh92C85D+6q1pVKqrzqvPT4Q+pF5PBaaXFc7pbpVPR/dqTZCPdXyOsJ652HuQa9sA+LQ/4Hu7J7HzF77szoY6FIRCUFaF5o7jVzieQi+ahEbyUOSHEBsYYyCfkp1lasacmcFrdKlzHoeJcl0Y2zjmDeWWoRBIgNErxYyKbi4vMaxvlD1xn4d1gN9fY4UB0bgh1yrIFihoAUMYwayUycAJl9SLCtb2/V5C2NY3tlmbDWOdAZiHBXgyPjyeUt/2AQXzMwwNCyclGssIayb95OqZ6LHMkOE7+2Lq20Wb54GiPjTU4EE/xDqdoNTAsaprLiPYEpAzPLuyrDN8rvJaUZG0sUbptVfueI2ZyKxNDj5Otra2MiaUpA+vxuUMphapy8b+uI4r0P/5JNuistpUBBkYCZX2QhGITFwttsbXBXVP8EmPb+HniUy0O9lrBuJVHicTsrp0Lsa7qBUIW9Dv85BOC7WELwuH7tvJH3gErNyuC9GH8MOMHQe8kqA5cm7U3h8pkL5DBWNc4QAd8nnczLUBeUUan9pVeZKKiYlfONU404cxZPM9NghmkuoJZy93TJElFuJj082ktcn7yoauyHnaImYQPpptp5udEhCNd/iOCTZbEEFhVCUNkS7RRmc7MCrSoPPKepnNgTaYzqQO7cUVNqaJGo32tgIIVYD0lWqzH072ERfli4Xssst2KH9jWskyssExp9D78+aQwDPCevOFJqPdsWfZUwD1t6nFVpZewooxxLXBLiYMgDoqW36cmB3+Y8wTvAO6LwuV/fizn9NlTLyp6qemkLXoBv3y0+H8D0cdFBdSLWabkMd0nJwmflS183gKU/U/h6Ilq8QO+oPcCBmly6jsjXZduRZ+jQ7pkgYWx84P5m/Eqdg7fMHfkMVvL3SYcTN3feUMndB5Tzw+7KPk84D/rziWWSBpieXcoeEJDfHcyuHMTmazyJMvkb/wl/Sw2ORRCMD+mtLISlmXwWgmeDob3kY/CAbEHnyR9b6pAIAKj0NyFSykhKuJrJuQwReLrDhuOO3d6m4ioFAkfOgf5SAVO9KgKVE52XLmSiQ2Xa2bHJbQKie1fZeZc5K9Y4vDDqQldbfVDxDSMPyF3HZ4pG0vs/8tO4IUH9hNnqK7ntNUi6Rg+NqTo+YVWFXD/rV3I0JXb198O25hEXscud2vNSSj1zVtwEZ9qysC03DJj/oeb5sRvwCSkZVLs51Vp4wdaqIX8GhdSAUypA9SNA9hbV/rEVBi5yepPHimj+mJr5KSawYvG1U2p4d3WVNilzQlxEktn1hcvGjL3Gjn820hxJquUezYZXflPF7j45RYQKkc2kh7BHMbOwotZwCdcJ+4136gefkOLTPDCQAmMbADXjFoYLj/bmbFz+SsI8VtljDnUX1ZWzu/8bi5JEf3YBB7SiiPkLeB8fg5M+i4Fqr2DU6/XYfzQQX7VxFvdCeFuyppjluUGpuIUdAprWmoTdTC0i2HJrXN7spr37zLN01wekMx0py9HBCoHecnwDcY6+8QxXzzWQdf3QyJwqOFHboRveH3Bx/zrvWZyIMltzy5Ph1BnaNFqiyqyKzu2le4Or92+Qzq9MCYZqr+hbrKKI=$1000,1000,1000$$</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:29.0134437</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v2/auth/login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;${Param_Username}&quot;,&quot;password&quot;:&quot;Password123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:54.4024898</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">61</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="integration_auth" elementType="Header">
                  <stringProp name="Header.name">integration_auth</stringProp>
                  <stringProp name="Header.value">bypass-automation</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-acf-sensor-data" elementType="Header">
                  <stringProp name="Header.name">x-acf-sensor-data</stringProp>
                  <stringProp name="Header.value">3,a,ni3dfFkOWrYUn0eEVVSUo1MV3ocwBXlzw1Ui1FwXGjLmtaIEYsKWHw6bLK/ttqJaMBENavdp6Ti+B+S0QC9APDkvw8miF2nQc0BJsp8ZycrsjRaKB9sANPzlLWRVxAEElVkYmZV/Q5m90ZkKSeuUqN6YmS0d0MXPjXwZSQANFSU=,O961z7WEZDvoXEP60jOIdV0AQQGlcdcrPhdGSJX35UZ0rI/kmF9j52M7LatCInPLKgK0T0C2vxSA00PRKwUhgXm/0YhLkERopNV/ErlKwQxGIy0y6EB/dfJnictls9CcMob0J2boGruDsEYIvsHuNvBtbSyb+FXByy8knpsfer8=$SlpaBDpd64G/T+G06DyFm4ab8KSHwiohEEurZMsgUCN9j97QIO1vcpxtAjiVbbTreCMKRQP0A4I3Wyma6HYPyVfLIk1jh8Za8sRnk8ZWd3NtATxrDzYO+n2eYAkKVBzmqPhh3N4pcy3XjWBNjzdIsUKDHH+VtyWi6pilzdJr0cKUxE8YB+FjCT+raAEA2lacCKsMIgNER1NC1OwXE6XqWnLBL0TzWS0gXxUjVZy5YdcH88BZfx73ZHYQpp35CnoD0z6Bvz/gznH3zgD4apATUXpY2rMJy6MHn1vpUbG41G9ENpgWVhzfzV3DgBKvKci6pHOfM3XWG8EWOv3+8yHd+wJVfHaKo/y60Yutd2ELJQKNlSouSbLRKVJfecw+rtMmzrYmZtXaq+jzM4PTXKDcgxFakyajlUanMfO4R/PhpmtEHHKROD/NaQOV+L+LRBm+5hQJdkQ+pgYHTeXJbhGdgNWJ4Uit76/xEU+yRy3nkVg8eRTEIPPGGj7d6DSrMAWjz3WHeTi2Fiz9RmcLFPdKL6s3MovsbJdLEp4rT0ueHUJwQJTrtsG3IvHgBX4UnPNTc/WY36Big+r3aa4syrsVqteEL1BkT0yoms68yVKmpN06Oa/a+KZ6YzWsilsXJpTF73Bm8CybVZVGfocfxciRotWi0ZfVTm9dI5hWWCKzrcPPN4dnHUBkZj/yp/fxuy7dQir0lkhzXyWLDWK0jgJMis0TNAGjT5S17sRzaQ6VhD0zJkSgI57LpFo6P3rusr7SPzxUq1qENOLApN2fR00foMBtJR4qpTrQLLPT29tomPuLGKoqOnsTLbwMJkGa5F38U52P+oqtJWRFsERwwmZGosoZ/MHOg+Wwz+eyaDI5J9pJeZPWAIchT0sG3tfbQPXzGQ6pj+dp46EtTvhAlF3yoyPNaRCWeyftGG3OQfCEgsB20K7jwO077v1ivTOgbK0C31Y64kY67eo1SzE6mSa+GLE5Ngb2gx3MhvNfwJhlatcse2+Is0fcKDkX14wI78hTeetSoiQaOhnB9txAh1Gyv2sF6dqxG/d0QbYtv8TdURq+J0Xz38Pk0+jtkK4xC25viJcMVyHk0397NfQ6onE3yykug0MKskU7ZzsdoDgwoL99Bs9Bf7fAug05nexmpYsXcoqnD4V6QJQjR3ntxdmE7gJc6a8QNJR5CK0TCu/llIrjjSpcsKfGUat12UqtRaUwV+AuEVst0gNM5owuzXOOpygjQUVhPEtDgFimk0rN+e1y0VpNs7mBhs3NxVoVd/mLjxojH/fMcP9SCyxihcyQ+/9VqnpBlQ99wPS2Hcc+hG0MZ4qUkWriIcT3qT4XQoFfG4MdZq7+BaxmE2OimCK5Q0Y1m0+LHA5EbifATJfGH8KTUXxIqh9zmF/pjf3YxGiTWA6/qvYSYs0dCrCxW7M9WCbmILQZK0s5mwN8HirTfBfKDln0KrEG7ONZm75pOQ4fK7P3jH7+k9s0zaAN3QYug08Z6Io96RBU5qjiJwhLFkBNdzzamQvFV66SRt36t5h/CPXEM2rHEZxKYlokh94tjCS2IZK4DyCvczl5pUIuMkxtwKNZt7nXbQjKFcjajv0edDSDDJhyPXYTQ6rEseWoz78uCrYn9W/qjKOMFVN5KUSdbg/+pyDqBw5c3WOcDigi3M7urFM2ccJcPh2iTGvb7zoBie6DJ+KsWm9njObvvW/mXS1tIXl+Z/DjLkwcmalY2KyF9ea5vDVD8B1qqg8i4xNUa8y+3cY8zIpHbmRLWNDrOYdZmI5xzjWkUqQNVdOyfNj3X/I7NmJ7pdzIRbxTpokwCE6vy6lCcPJ+JR2ghSJ3zzim6iw2cate6UovQF3A1uQqqaQ8JOCJ3/HTwKLlKB+wXr5s4Fk5olYq8geAgxO46qkvBVcgNlMI1pA7fjG/Leq1+OBLgsCVJr1/Ay0hSUhbQvQlNP4njlAAbo2OLubrx6OFGTg6mTKFFAO96fpSuDasgELvPURG1/KREI8ZdgkSWTalPEQ1ePGmxR2BeDv8yeSSZFbqyVgh4j9l5NPhlpx0VdQNN5+3+rkHl7zd9O/kQtpmtHDZJLHZmRLkhm46/ubiHs/BzOWtAr1j8dgLM1Xs8Tf/cBC9CT4LApITdLX5Re5JMOQt3A6BDvSlbLIGf1Uspm2mPxeeM8IGiGzcXSqZKdKJyRrsUtJMvIQMhRYmpaMiIAGa5JyHOjGFrpflsZvV22VnvEljRfPx37gz$1000,1000,1000$$</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:34:54.4035182</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/authenticate" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;accessToken&quot;:&quot;eyJraWQiOiI0UVh3dlc5d3laa3V6OXV1QVUwLVlIZ3l4MGRQMGhhM3h2ZUszTUM2WTNVIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULkR2ckdGT2RRSlVLUnQ0bklYMWE5V1VZRGVQR3F4TnBwbS1wZUFVakVCWmMub2FyMmQxZTU4ZnNNaUxzbUEwaDciLCJpc3MiOiJodHRwczovL2lkZW50aXR5LmRldnRlc3QudmVnYXMvb2F1dGgyL2F1c3BoN2V6cDNHa2trOFdOMGg3IiwiYXVkIjoiaHR0cHM6Ly9hcGkubWdtcmVzb3J0cy5jb20iLCJzdWIiOiJzZXBlbG5jZHZ2ckBtZ21xYS5jb20iLCJpYXQiOjE2OTg3MzQyMjcsImV4cCI6MTY5ODczNzgyNywiY2lkIjoiMG9hMWRwbGdzMmRwVE5rekEwaDgiLCJ1aWQiOiIwMHUxdGV3ampiN0pIMmp0YTBoOCIsInNjcCI6WyJvZmZsaW5lX2FjY2VzcyIsIm9wZW5pZCIsInByb2ZpbGU6Y3JlYXRlIiwiYm9va2luZy5yb29tLnJlc3Y6dXBkYXRlIiwicHJvZmlsZTp1cGRhdGUiLCJyY3MucmNzOmFsbCIsImxveWFsdHk6cHJvZmlsZTpyZWFkIiwiZW1haWwiLCJib29raW5nLnJvb20ucmVzdjpzZWFyY2giLCJsb3lhbHR5OmJhbGFuY2VzOnJlYWQiLCJwcm9maWxlIiwiZGlyZWN0b3J5OnVwZGF0ZTpzZWxmIiwicHJvZmlsZTpyZWFkIiwicGhvbmUiLCJsb3lhbHR5OnN0b3Bjb2RlczpyZWFkIiwiaXRpbmVyYXJ5OnVwZGF0ZSIsIml0aW5lcmFyeTpjcmVhdGUiLCJyY3MucmNzOnFyY29kZSIsIml0aW5lcmFyeTpyZWFkIl0sImF1dGhfdGltZSI6MTY5ODczNDIyNSwiYmlydGhkYXRlIjoiMTk3OC0xMC0xNSIsImNvbS5tZ20uZW1haWxWZXJpZmllZCI6ZmFsc2UsImdyb3VwcyI6WyJtZ21fZ3Vlc3QiXSwiZ2l2ZW5fbmFtZSI6InNlcGZuamhjZ2siLCJjb20ubWdtLmlkIjoiMDB1MXRld2pqYjdKSDJqdGEwaDgiLCJtZ21fcm9sZSI6Imd1ZXN0IiwiY29tLm1nbS5pZGVudGl0eS52ZXJpZmllZCI6ZmFsc2UsIm1vYmlsZV9waG9uZSI6IisxNzAyODQ1MTQ3OCIsIm5hbWUiOiJzZXBmbmpoY2drIHNlcGxuY2R2dnIiLCJjb20ubWdtLmxveWFsdHkucGVycGV0dWFsX2VsaWdpYmxlIjpmYWxzZSwibWxpZmUiOiIxMDMwNTkzMTkiLCJjb20ubWdtLmdzZS5pZCI6IjEwMzI5MjM5MDYwNTAiLCJjb20ubWdtLmxveWFsdHkucGVycGV0dWFsX2VsaWdpYmxlX3Byb3BlcnRpZXMiOltdLCJmYW1pbHlfbmFtZSI6InNlcGxuY2R2dnIiLCJjb20ubWdtLmxveWFsdHkuZnJlZXBsYXlfYXZhaWxhYmxlIjpmYWxzZSwiZW1haWwiOiJzZXBlbG5jZHZ2ckBtZ21xYS5jb20iLCJjb20ubWdtLm1saWZlX251bWJlciI6IjEwMzA1OTMxOSJ9.qVT1_6s4TvmT2FjAEKhwhTMBF37t0PxN8CuugL7tfLKDuMhhKZHznEIGq-05WUcnp8lQAzXW8IROr1X5fa17OonqO6L8pbsjZYpgXUA-r-wsL-jJxr6xLwqH0CFLCgoBsCBTKawzbSHgBq-G0E4tARa_g6s_SceOKqiJ6SQZjtWf50LGZcL9KCMMRi5C43tLMgWufuOBxOcWLs8HhrWXtKifdUf9ZSNasYdlvw_U1TRxixMI2NxI2r6023duldpPlMsLzxDPY0mNIHrbrvbOuVWJusEnL8QBFqa8ufuusv4xP8ty6-IeDLABABQiSqKPlYPvd-hkB_om-LB4vETarA&quot;,&quot;idToken&quot;:&quot;eyJraWQiOiI0UVh3dlc5d3laa3V6OXV1QVUwLVlIZ3l4MGRQMGhhM3h2ZUszTUM2WTNVIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMHUxdGV3ampiN0pIMmp0YTBoOCIsIm5hbWUiOiJzZXBmbmpoY2drIHNlcGxuY2R2dnIiLCJlbWFpbCI6InNlcGVsbmNkdnZyQG1nbXFhLmNvbSIsInZlciI6MSwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5kZXZ0ZXN0LnZlZ2FzL29hdXRoMi9hdXNwaDdlenAzR2trazhXTjBoNyIsImF1ZCI6IjBvYTFkcGxnczJkcFROa3pBMGg4IiwiaWF0IjoxNjk4NzM0MjI3LCJleHAiOjE2OTg3Mzc4MjcsImp0aSI6IklELm1uRGNWRXZVN0lyWVQxcFZTekNmVkRoYkFmdTFYejB2UjJuRzR6QXdESzAiLCJhbXIiOlsicHdkIl0sImlkcCI6IjAwbzJyM3kyY25BV01CUVpZRUdWIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VwZWxuY2R2dnJAbWdtcWEuY29tIiwiYXV0aF90aW1lIjoxNjk4NzM0MjI1LCJhdF9oYXNoIjoiSmhsb0Zucll4M1hCc3ZkM0g5VW5RdyIsImFkZHJlc3MuY2l0eSI6IlBhcnNpcHBhbnkiLCJsb2dpbl9lbWFpbCI6InNlcGVsbmNkdnZyQG1nbXFhLmNvbSIsImFkZHJlc3Muc3RhdGUiOiJOSiIsImJpcnRoX2RhdGUiOiIxOTc4LTEwLTE1IiwiY29tLm1nbS5lbWFpbFZlcmlmaWVkIjpmYWxzZSwibGFzdF9uYW1lIjoic2VwbG5jZHZ2ciIsImdyb3VwcyI6WyJtZ21fZ3Vlc3QiXSwiY29tLm1nbS5pZCI6IjAwdTF0ZXdqamI3SkgyanRhMGg4IiwidGVzdC5pZHZlcmlmaWVkLnRpbWUiOnRydWUsImFkZHJlc3MuY291bnRyeSI6IlVTIiwiY29tLm1nbS5pZGVudGl0eS52ZXJpZmllZCI6ZmFsc2UsIm1vYmlsZV9waG9uZSI6IisxNzAyODQ1MTQ3OCIsIm1saWZlIjoiMTAzMDU5MzE5IiwiY29tLm1nbS5nc2UuaWQiOiIxMDMyOTIzOTA2MDUwIiwiYWRkcmVzcy5zdHJlZXQiOiI3MzUgU3lsYW4gV2F5IiwiZmlyc3RfbmFtZSI6InNlcGZuamhjZ2siLCJhZGRyZXNzLnppcF9jb2RlIjoiODkzNTMiLCJjb20ubWdtLm1saWZlX251bWJlciI6IjEwMzA1OTMxOSJ9.d4gSe1JoNtoRKvG8vxE_gz7hcuxWD30MdctRc3HakxHA8r5wMGosSKws6GXA4PpyM5efbBRQFWjX_Pw0qO9pOFzJKm7NGZoJL014PNzWByBkmC4wJLo94HW9E1U3eOAV10FQypAnNup_d6TtXIP9skq4fCL2auMm3zcm2TsS5gPFRGNQ8YM5tWa5jxM6tbwrvR1mEb6nRiKmNylGstzF2Bfg0aJ6-rG8jXF25-rtOISRyLqnwuptd7UYrgOxMdPhUDciBJd1V8iB5rDrtl4NqyPFvxAFlHkv_X7j4aUENCfZ7Chrv1uALhaCFNk0p-wpsGbT_MsQ9_7WJC_cpoP_hg&quot;,&quot;transient&quot;:false,&quot;nonce&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mgm-resorts-dev.web.app</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/authenticate?environment=qa4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-31T12:18:08.1272276</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Dart/2.19 (dart:io)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">3814</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">mgm-resorts-dev.web.app</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-31T12:18:08.1272276</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_customer_analytics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_customer_analytics {\n  __typename\n  me {\n    __typename\n    ...CustomerCore\n    ...ContactMethods\n    memberships {\n      __typename\n      ... on MlifeMembership {\n        ...MlifeMembershipFields\n      }\n    }\n  }\n}\n\nfragment CustomerCore on Customer {\n  __typename\n  ids {\n    __typename\n    mgmId\n    mlifeNumber\n  }\n  name {\n    __typename\n    firstName\n    lastName\n    middleName\n    fullName\n  }\n  birthdate\n  idVerified: idVerifiedDerived\n}\n\nfragment ContactMethods on Customer {\n  __typename\n  contactMethods {\n    __typename\n    ... on Email {\n      email\n      emailType: type\n      isPrimary\n    }\n    ... on Phone {\n      number\n      phoneType: type\n      isPrimary\n    }\n    ... on Address {\n      street1\n      street2\n      city\n      state\n      postalCode\n      country\n      addressType: type\n      isPrimary\n    }\n  }\n}\n\nfragment MlifeMembershipFields on MlifeMembership {\n  __typename\n  id\n  creditAccount\n  slotDollars: availableSlotDollarBalance {\n    __typename\n    balance: slotDollarBalance\n    bonusBalance: bonusSlotDollarBalance\n  }\n  customerBalances {\n    __typename\n    tier {\n      __typename\n      tierType: tierValue\n      tierCredits\n      tierExpirationDate\n      creditToNextTier\n      nextTier\n    }\n    balance {\n      __typename\n      freePlayValues: xtraCreditBalancesLocal {\n        __typename\n        siteId\n        freePlay: xtraCreditBalanceLocal\n        siteName\n      }\n      freePlayAnywhere: xtraCreditBalanceGlobal\n      freePlayTotal: freePlay\n      pointPlay: pointBalance\n      expressComps\n      giftPointsTotal: giftPoints\n    }\n    giftPoints {\n      __typename\n      points: hgsPoints\n      linked: giftPointsLinked\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T19:32:20.8802521</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1843</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T19:32:20.8807798</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="me_room_reservations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query me_room_reservations {\n  __typename\n  me {\n    __typename\n    roomReservations(queryParams: {reservationStatus: [RESERVED, INHOUSE]}) {\n      __typename\n      ...FullRoomReservationFields\n    }\n  }\n}\n\nfragment FullRoomReservationFields on RoomReservation {\n  __typename\n  operaConfirmationNumber\n  resvNameId\n  sharedReservation\n  status\n  totalGuests\n  checkInDate\n  checkOutDate\n  arrivalTime\n  folio {\n    __typename\n    ...RoomReservationFolioFields\n  }\n  property {\n    __typename\n    ...PropertyFields\n  }\n  room {\n    __typename\n    ratePlans {\n      __typename\n      ratePlanCode\n    }\n    roomNumber\n    marketSegmentCode\n    inventoryBlockCode\n    roomNumberDetails {\n      __typename\n      roomNumber\n      floor\n    }\n    roomClass\n    roomType {\n      __typename\n      id\n      name\n      images {\n        __typename\n        ...ImagesFields\n      }\n      attributes {\n        __typename\n        maxOccupancy\n      }\n    }\n    elevatorDirections {\n      __typename\n      directions {\n        __typename\n        directions\n      }\n    }\n    roomKeyInformation {\n      __typename\n      supportsQrCode\n      digitalKeyVendor\n      message\n      keyPickupMessage\n    }\n    bellHopDeskDirections {\n      __typename\n      directions {\n        __typename\n        directions\n      }\n    }\n  }\n  metadata {\n    __typename\n    paymentUpdated\n    etaUpdated\n    paymentFailed\n    guestsUpdated\n    stayEnhanced\n    dailyServiceOptOut\n    upcoming\n    donationMetadata {\n      __typename\n      donationSucceeded\n      donationId\n    }\n  }\n  primaryProfile: primaryProfile {\n    __typename\n    ...ProfileFields\n  }\n  profiles: profiles {\n    __typename\n    ...ProfileFields\n  }\n  mgmProfile {\n    __typename\n    mlifeNumber\n    mgmId\n  }\n  creditCards {\n    __typename\n    creditCardCode\n    creditCardHolderName\n    creditCardFourDigits\n    creditCardExpire\n  }\n  checklistStatusText {\n    __typename\n    idVerifyPending\n    idVerifyComplete\n    setEtaPending\n    setEtaComplete\n    addPaymentPending\n    addPaymentComplete\n    sharedWithPending\n    sharedWithComplete\n    addPaymentFailed\n    priorToDayOfArrival {\n      __typename\n      ...CheckListTitleCaptionFields\n    }\n    dayOfArrival {\n      __typename\n      ...CheckListTitleCaptionFields\n    }\n    expiringPayment {\n      __typename\n      ...ChecklistPriorAndDayOfFields\n    }\n    failedPaymentCanRetry {\n      __typename\n      ...ChecklistPriorAndDayOfFields\n    }\n    failedPaymentCannotRetry {\n      __typename\n      ...ChecklistPriorAndDayOfFields\n    }\n  }\n  additionalGuests {\n    __typename\n    ...AdditionalGuestFields\n  }\n  addOnFaqSections {\n    __typename\n    ...AddOnFaqsFields\n  }\n  heroAddOn {\n    __typename\n    ...HeroAddOnFields\n  }\n  addOnSections {\n    __typename\n    ...AddOnSection\n  }\n  digitalCheckInEligibility {\n    __typename\n    ...DigitalCheckInEligibilityFields\n  }\n  parkingGarageBarCode {\n    __typename\n    barCode\n  }\n  roomUpsell {\n    __typename\n    title\n    formattedMessage\n    status\n    type\n  }\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}\n\nfragment PropertyFields on Property {\n  __typename\n  id\n  propertyId\n  propertyKey\n  operaPropertyCode\n  name\n  images {\n    __typename\n    ...ImagesFields\n  }\n  region\n  regionName\n  timezone\n  digitalKeyVendor\n  phoneNumber {\n    __typename\n    reservationsNumber\n  }\n  websiteUrl\n}\n\nfragment ProfileFields on RoomReservationProfile {\n  __typename\n  id\n  firstName\n  lastName\n  mLifeNumber\n  electronicAddresses {\n    __typename\n    mfPrimaryYN\n    electronicAddressType\n    eaddress\n  }\n}\n\nfragment CheckListTitleCaptionFields on ChecklistStatusTextTitleCaption {\n  __typename\n  notCompleteTitle\n  notCompleteCaption\n  completeTitle\n  completeCaption\n  supplementaryCardTitle\n  supplementaryCardCaption\n}\n\nfragment ChecklistPriorAndDayOfFields on ChecklistStatusTextPriorAndDayOf {\n  __typename\n  priorToDayOfArrival {\n    __typename\n    ...CheckListTitleCaptionFields\n  }\n  dayOfArrival {\n    __typename\n    ...CheckListTitleCaptionFields\n  }\n}\n\nfragment AdditionalGuestFields on RoomReservationAdditionalGuest {\n  __typename\n  firstName\n  lastName\n  mgmId\n  reservationStatus\n  operaConfirmationNumber\n  resvNameId\n  precreated\n  shareType\n}\n\nfragment RoomReservationFolioFields on RoomReservationFolio {\n  __typename\n  operaConfirmationNumber\n  reservationStatus\n  checkInDate\n  checkOutDate\n  roomNumber\n  profile {\n    __typename\n    ...FolioProfileFields\n  }\n  folios {\n    __typename\n    ...FolioFields\n  }\n  totalCharges\n  totalCredits\n  currentBalance\n}\n\nfragment FolioProfileFields on FolioProfile {\n  __typename\n  firstName\n  lastName\n  email\n  operaProfileId\n  address {\n    __typename\n    ...FolioAddressFields\n  }\n}\n\nfragment FolioAddressFields on FolioAddress {\n  __typename\n  street\n  city\n  state\n  country\n  zip\n}\n\nfragment FolioFields on Folio {\n  __typename\n  windowNo\n  windowCharges\n  windowCredits\n  windowBalance\n  windowLastUpdated\n  billItems {\n    __typename\n    ...FolioBillItemFields\n  }\n}\n\nfragment FolioBillItemFields on FolioBillItem {\n  __typename\n  date\n  description\n  chargeAmount\n  creditAmount\n  supplement\n  ccLast4Digits\n}\n\nfragment AddOnFaqsFields on RoomReservationAddOnFaqSection {\n  __typename\n  title\n  icon\n  faqs {\n    __typename\n    ...FaqFields\n  }\n}\n\nfragment FaqFields on RoomReservationAddOnFaq {\n  __typename\n  question\n  answer\n}\n\nfragment HeroAddOnFields on RoomReservationAddOn {\n  __typename\n  id\n  title\n  description\n  legalText\n  purchasedItem {\n    __typename\n    ...AddOnItemFields\n  }\n  state\n  icon\n  items {\n    __typename\n    ...AddOnItemFields\n  }\n  displayPrice\n  isEarlyCheckin\n}\n\nfragment AddOnItemFields on RoomReservationAddOnItem {\n  __typename\n  code\n  price\n  title\n  displayPrice\n  state\n}\n\nfragment AddOnSection on RoomReservationAddOnSection {\n  __typename\n  id\n  title\n  addOns {\n    __typename\n    ...ReservationAddOnFields\n  }\n}\n\nfragment ReservationAddOnFields on RoomReservationAddOn {\n  __typename\n  id\n  title\n  description\n  legalText\n  purchasedItem {\n    __typename\n    ...AddOnItemFields\n  }\n  state\n  icon\n  items {\n    __typename\n    ...AddOnItemFields\n  }\n  displayPrice\n  isEarlyCheckin\n}\n\nfragment DigitalCheckInEligibilityFields on DigitalCheckInEligibilityIsEligibleResponse {\n  __typename\n  isEligible\n  reason\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:35:42.4908768</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">6775</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:35:42.4908768</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="parking" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;stayRangeIncludesDate&quot;:&quot;2023-10-30&quot;},&quot;query&quot;:&quot;query parking($stayRangeIncludesDate: String!) {\n  __typename\n  me {\n    __typename\n    parking: roomReservations(queryParams: {reservationStatus: [RESERVED, INHOUSE, CHECKEDOUT], stayRangeIncludesDate: $stayRangeIncludesDate}) {\n      __typename\n      operaConfirmationNumber\n      parkingGarageBarCode {\n        __typename\n        barCode\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:35:52.4440214</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">457</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:35:52.4440214</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_favorites" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;userId&quot;:&quot;00u1tewjjb7JH2jta0h8&quot;},&quot;query&quot;:&quot;query get_favorites($userId: String!) {\n  __typename\n  getFavorite(userId: $userId) {\n    __typename\n    itemId\n    section\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mgm-nonprod-qa.apigee.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rec/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:10.3617843</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">215</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">mgm-nonprod-qa.apigee.net</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:10.3617843</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RewardsMembershipSummary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;RewardsMembershipSummary&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query RewardsMembershipSummary {\n  __typename\n  me {\n    __typename\n    memberships {\n      __typename\n      ... on MlifeMembership {\n        customerBalances {\n          __typename\n          tier {\n            __typename\n            tierType: tierValue\n            tierCredits\n            creditToNextTier\n            nextTier\n            minTierCreditsForCurrentTier\n            minTierCreditsForNextTier\n            tierExpirationDate\n          }\n          balance {\n            __typename\n            mgmRewardPoints\n            pendingMGMRewardPoints\n            slotDollars\n            giftPoints\n            expressComps\n            xtraCreditBalanceGlobal\n            xtraCreditBalancesLocal {\n              __typename\n              siteName\n              xtraCreditBalanceLocal\n            }\n          }\n        }\n      }\n    }\n    ids {\n      __typename\n      mlifeNumber\n    }\n    name {\n      __typename\n      firstName\n      lastName\n    }\n    isMilitaryVeteran\n    isLoyaltyCCMember\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T19:38:45.6738489</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1120</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T19:38:45.6738489</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoyaltyAccountView" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;LoyaltyAccountView&quot;,&quot;variables&quot;:{&quot;view&quot;:&quot;loyalty-balances&quot;,&quot;channel&quot;:&quot;web&quot;},&quot;query&quot;:&quot;query LoyaltyAccountView($view: String!, $channel: String!) {\n  __typename\n  loyaltyAccountView(view: $view, channel: $channel) {\n    __typename\n    ... on LoyaltyAccountBalances {\n      currencyDisplay {\n        __typename\n        holidayShoppeName\n        holidayShoppeDescription\n        holidayShoppeFAQItems {\n          __typename\n          holidayShoppeFAQ\n          holidayShoppeFragment {\n            __typename\n            path\n            propertyId\n            id\n            headline\n            body\n            destinationURL\n            contentType\n          }\n        }\n        freeplayDescription\n        freeplayDisclaimer\n        freeplayBalanceAvailableText\n        freeplayNoBalanceText\n        freeplayTableColumnHeading1\n        freeplayTableColumnHeading2\n        freeplayFAQItems {\n          __typename\n          freeplayFragment {\n            __typename\n            headline\n            body\n          }\n        }\n        slotDollarsDescription\n        slotDollarsExpirationLabel\n        slotDollarsName\n        slotDollarsFAQItems {\n          __typename\n          slotDollarsFragment {\n            __typename\n            id\n            headline\n            body\n          }\n        }\n        pointsName\n        pointsPending\n        pointsDescription\n        pointsFAQItems {\n          __typename\n          pointsFAQ\n          pointsFragment {\n            __typename\n            headline\n            body\n          }\n        }\n      }\n      headerMemberName\n      headerMemberNumber\n      headerTierExpirationMessage\n      tierMeter {\n        __typename\n        balanceLabel\n        advanceMessage\n        maintainMessage\n        moreInfo\n        benefitsHeading\n        viewBenefitsCTAText\n        platinumGraphic\n        noirGraphic\n        noCreditsText\n        noCreditsImage\n        noCreditsCTAText\n        noCreditsCTADestination\n        platinumVideo\n        noirVideo\n        platinumNoirCreditBalance\n      }\n      nextTierPromo {\n        __typename\n        standardHeading\n        learnMoreCTAText\n      }\n      tierProgressOverlay {\n        __typename\n        waysToEarnHeading\n      }\n      newTierAchieved {\n        __typename\n        heading\n        body\n        backgroundImage\n      }\n      faq {\n        __typename\n        heading\n        faqItems {\n          __typename\n          faqFragment {\n            __typename\n            headline\n            body\n          }\n        }\n      }\n      earnAndRedeem {\n        __typename\n        earnHeading\n        earnImage\n        redeemHeading\n        redeemImage\n        redeemSections {\n          __typename\n          heading\n          body\n          disclaimer\n          items\n          itemsFragments {\n            __typename\n            path\n            propertyId\n            id\n            headline\n            body\n            destinationURL\n            contentType\n            image\n          }\n        }\n        earnSections {\n          __typename\n          heading\n          body\n          disclaimer\n          items\n          itemsFragments {\n            __typename\n            path\n            propertyId\n            id\n            headline\n            body\n            destinationURL\n            contentType\n            image\n          }\n        }\n      }\n      marketingPromo {\n        __typename\n        backgroundImage\n        body\n        heading\n        learnMoreCTADestination\n        learnMoreCTAText\n      }\n    }\n  }\n  newLoyaltyTiers {\n    __typename\n    tierBenefits {\n      __typename\n      description\n      icon\n      title\n      disclaimer\n    }\n    name\n    images {\n      __typename\n      card {\n        __typename\n        url\n      }\n      icon {\n        __typename\n        url\n      }\n      blankCard {\n        __typename\n        url\n      }\n    }\n    description\n    perks\n    tierRank\n    minCredits\n    promotionPhrase\n    nextTier\n    blankCardOverlayTextColor\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:34.4641648</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">4192</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:34.4641648</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="674887244">loyaltyAccountView</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGamification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getGamification&quot;,&quot;variables&quot;:{&quot;queryParams&quot;:{&quot;streakStatus&quot;:null}},&quot;query&quot;:&quot;query getGamification($queryParams: GamificationCustomerParams!) {\n  __typename\n  gamificationCustomerData(queryParams: $queryParams) {\n    __typename\n    challenges {\n      __typename\n      id\n      offerCode\n      status\n      goalsNeeded\n      bonuses {\n        __typename\n        name\n        rewardType\n        bonusType\n        bonusValue\n        daysToExpire\n        expirationDate\n      }\n      goals {\n        __typename\n        name\n        currentValue\n        targetValue\n        bonusValue\n        bonusType\n        status\n      }\n    }\n  }\n  loyaltyGCOffers {\n    __typename\n    offerCode\n    title\n    progressType\n    itemType\n    prefix {\n      __typename\n      reward\n      goalReward\n      goal\n    }\n    description {\n      __typename\n      main\n      ended\n      success\n    }\n    details {\n      __typename\n      header\n      value\n    }\n    image {\n      __typename\n      header {\n        __typename\n        url\n      }\n      successBackground {\n        __typename\n        url\n        metadata {\n          __typename\n          description\n        }\n      }\n    }\n    frequentyAskedQuestionsLabel\n    frequentyAskedQuestionsUrl\n    disclaimer\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:46.2464432</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1338</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:46.2464432</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="7018490">LoyaltyGCOffer</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_cutomer_and_trips" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;startDate&quot;:&quot;2021-10-30&quot;,&quot;endDate&quot;:&quot;2025-10-30&quot;},&quot;query&quot;:&quot;query get_cutomer_and_trips($startDate: String!, $endDate: String!) {\n  __typename\n  me {\n    __typename\n    ...CustomerCore\n    trips(tripSearchFilter: {startDate: $startDate, endDate: $endDate, enableMock: false}) {\n      __typename\n      ...TripsFields\n    }\n    sharedTrips(tripSearchFilter: {startDate: $startDate, endDate: $endDate, enableMock: false}) {\n      __typename\n      ...SharedTripsFields\n    }\n  }\n}\n\nfragment TripsFields on Trip {\n  __typename\n  tripId\n  tripShareId\n  tripName\n  location\n  startDate\n  endDate\n  productsMetadata {\n    __typename\n    bookingDomain\n    numGuests\n    confirmationNumber\n    propertyId\n    numAdults\n    numChildren\n    hidden\n    status\n    propertyDetails {\n      __typename\n      propertyId\n      path\n      name\n      shortName\n      timezone\n      location {\n        __typename\n        address\n        latitude\n        longitude\n      }\n      phoneNumber {\n        __typename\n        generalNumber\n      }\n      images {\n        __typename\n        colorVectorLogo\n        overview {\n          __typename\n          url\n        }\n      }\n    }\n    product {\n      __typename\n      ... on RoomProductDetails {\n        __typename\n        checkInDate\n        checkOutDate\n        confirmationGuid\n        roomDetails {\n          __typename\n          name\n          propertyId\n          property {\n            __typename\n            shortName\n          }\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n        }\n      }\n      ... on DiningProductDetails {\n        __typename\n        reservationDateTime\n        restaurantId\n        restaurantDetails {\n          __typename\n          name\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n          property {\n            __typename\n            shortName\n          }\n        }\n      }\n      ... on ShowProductDetails {\n        __typename\n        showId\n        showEventId\n        eventDateTime\n        seats {\n          __typename\n          ... on SeatDetails {\n            rowName\n            sectionName\n            seatNumber\n          }\n        }\n        showDetails {\n          __typename\n          name\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n        }\n      }\n      ... on FreebieProductDetails {\n        __typename\n        freebieActivityId\n        reservationStartDateTime\n        reservationEndDateTime\n        freebieDetails {\n          __typename\n          message\n          moreInfo\n          timings\n        }\n      }\n    }\n  }\n  enableTripIntent\n  intents {\n    __typename\n    id\n    domain\n    intentInfo {\n      __typename\n      allowMultipleAnswers\n      questionId\n      question\n      answers {\n        __typename\n        answer\n        answerId\n      }\n    }\n  }\n}\n\nfragment SharedTripsFields on SharedTrip {\n  __typename\n  tripShareId\n  tripName\n  location\n  startDate\n  endDate\n  productsMetadata {\n    __typename\n    bookingDomain\n    sharedConfirmationNumber\n    propertyId\n    hidden\n    propertyDetails {\n      __typename\n      propertyId\n      path\n      name\n      shortName\n      timezone\n      location {\n        __typename\n        address\n        latitude\n        longitude\n      }\n      phoneNumber {\n        __typename\n        generalNumber\n      }\n      images {\n        __typename\n        colorVectorLogo\n        overview {\n          __typename\n          url\n        }\n      }\n    }\n    product {\n      __typename\n      ... on SharedRoomProductDetails {\n        __typename\n        checkInDate\n        checkOutDate\n        roomDetails {\n          __typename\n          name\n          propertyId\n          property {\n            __typename\n            shortName\n          }\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n        }\n      }\n      ... on SharedDiningProductDetails {\n        __typename\n        reservationDateTime\n        restaurantId\n        restaurantDetails {\n          __typename\n          name\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n          property {\n            __typename\n            shortName\n          }\n        }\n      }\n      ... on SharedShowProductDetails {\n        __typename\n        showId\n        showEventId\n        eventDateTime\n        showDetails {\n          __typename\n          name\n          images {\n            __typename\n            overview {\n              __typename\n              url\n            }\n          }\n        }\n      }\n      ... on SharedFreebieProductDetails {\n        __typename\n        freebieActivityId\n        reservationStartDateTime\n        reservationEndDateTime\n        freebieDetails {\n          __typename\n          message\n          moreInfo\n          timings\n        }\n      }\n    }\n  }\n}\n\nfragment CustomerCore on Customer {\n  __typename\n  ids {\n    __typename\n    mgmId\n    mlifeNumber\n  }\n  name {\n    __typename\n    firstName\n    lastName\n    middleName\n    fullName\n  }\n  birthdate\n  idVerified: idVerifiedDerived\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:55.9557087</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">5654</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:36:55.9557087</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="propertydetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/propertydetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:37:56.8632237</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:37:56.8632237</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_properties" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_properties($destination: String, $search: String) {\n  __typename\n  getProperties(destination: $destination, queryParams: {search: $search}) {\n    __typename\n    ...PropertyFields\n  }\n}\n\nfragment PropertyFields on Property {\n  __typename\n  id\n  propertyId\n  propertyKey\n  operaPropertyCode\n  name\n  shortName\n  images {\n    __typename\n    ...ImagesFields\n  }\n  region\n  regionName\n  timezone\n  digitalKeyVendor\n  phoneNumber {\n    __typename\n    reservationsNumber\n  }\n  websiteUrl\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:37:10.4063087</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">686</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:37:10.4063087</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1223801559">getProperties</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sendDigitalKeyTelemetry" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;body&quot;:[{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Assa start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;assa&quot;,&quot;timestamp&quot;:&quot;2023-10-30T07:57:23.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;dorma&quot;,&quot;timestamp&quot;:&quot;2023-10-30T07:58:43.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;terminate_start&quot;,&quot;message&quot;:&quot;Dorma unregister start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;dorma&quot;,&quot;timestamp&quot;:&quot;2023-10-30T07:58:49.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Assa start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;assa&quot;,&quot;timestamp&quot;:&quot;2023-10-30T08:01:35.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;dorma&quot;,&quot;timestamp&quot;:&quot;2023-10-30T08:01:35.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;register_start&quot;,&quot;message&quot;:&quot;Assa register start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;assa&quot;,&quot;timestamp&quot;:&quot;2023-10-30T08:01:36.000Z&quot;}},{&quot;deviceId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;update_start&quot;,&quot;message&quot;:&quot;Dorma update start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;dorma&quot;,&quot;timestamp&quot;:&quot;2023-10-30T08:01:36.000Z&quot;}}]},&quot;query&quot;:&quot;mutation sendDigitalKeyTelemetry($body: [SendTelemetryInput!]!) {\n  __typename\n  sendDigitalKeyTelemetry(body: $body) {\n    __typename\n    success\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:28.2239864</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1479</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:28.2239864</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sendDigitalKeyTelemetry   " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;body&quot;:[{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;${Param_VendorKey1} start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;terminate_start&quot;,&quot;message&quot;:&quot;Dorma unregister start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;${Param_VendorKey1} start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;register_start&quot;,&quot;message&quot;:&quot;${Param_VendorKey1} register start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;update_start&quot;,&quot;message&quot;:&quot;Dorma update start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}}]},&quot;query&quot;:&quot;mutation sendDigitalKeyTelemetry($body: [SendTelemetryInput!]!) {\n  __typename\n  sendDigitalKeyTelemetry(body: $body) {\n    __typename\n    success\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:28.2239864</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1479</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:28.2239864</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RecommendationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;idType&quot;:&quot;mLifeId&quot;,&quot;recommendationListId&quot;:&quot;103059319&quot;,&quot;propertyId&quot;:&quot;44e610ab-c209-4232-8bb4-51f7b9b13a75&quot;,&quot;maxRecommendations&quot;:20,&quot;startsAt&quot;:&quot;2023-10-30&quot;,&quot;endsAt&quot;:&quot;2023-11-06&quot;,&quot;numberOfGuests&quot;:1},&quot;query&quot;:&quot;query RecommendationList($idType: String!, $propertyId: String!, $maxRecommendations: Int!, $startsAt: String!, $endsAt: String!, $numberOfGuests: Int!, $recommendationListId: String!) {\n  __typename\n  recommendationList(idType: $idType, propertyId: $propertyId, maxRecommendations: $maxRecommendations, startsAt: $startsAt, endsAt: $endsAt, numberOfGuests: $numberOfGuests, id: $recommendationListId) {\n    __typename\n    modelVersion\n    userType\n    recommendations {\n      __typename\n      ... on Restaurant {\n        priceRange\n        cuisine\n        isSevenRoomsRestaurant\n        id\n        path\n        name\n        propertyId\n        tags\n        reopenDate\n        images {\n          __typename\n          ...ImagesFields\n        }\n        contentType\n      }\n      ... on EntertainmentSchedule {\n        path\n        propertyId\n        name\n        id\n        image {\n          __typename\n          url\n        }\n        price {\n          __typename\n          startingPrice\n        }\n        showEventInfo\n      }\n    }\n  }\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mgm-nonprod-qa.apigee.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rec/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:40.1940534</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1436</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">mgm-nonprod-qa.apigee.net</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:40.1940534</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="registerDevice **" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;vendorId&quot;:&quot;658de91d894c740f3f5542ba8b9cc8bc&quot;,&quot;deviceToken&quot;:&quot;ca2Th6GcSMumn82bsKYp-E:APA91bFuWhmH5Y0znnzeNJTV8TvzDGo_53CKbsKiy_VN4PMI0EJHE7nxGiZFh2yFw0906BLBYe4JOo6OKYsXDV6dCkJXc9DMWufd1m7zdBpqyEpF7mg2uQgNwH3bkzYDNosHLtJBnL9i&quot;,&quot;deviceName&quot;:&quot;ranchu&quot;,&quot;systemName&quot;:&quot;Android&quot;,&quot;systemVersion&quot;:&quot;9&quot;,&quot;model&quot;:&quot;flutter&quot;,&quot;keyVendor&quot;:&quot;assa&quot;},&quot;query&quot;:&quot;mutation registerDevice($vendorId: String!, $deviceToken: String!, $deviceName: String!, $systemName: String!, $systemVersion: String!, $model: String!, $keyVendor: String) {\n  __typename\n  registerDevice(vendorId: $vendorId, deviceToken: $deviceToken, deviceName: $deviceName, systemName: $systemName, systemVersion: $systemVersion, model: $model, keyVendor: $keyVendor) {\n    __typename\n    ... on DigitalKeyResponse {\n      success\n    }\n    ... on AssaRegisterResponse {\n      success\n      invitationCode\n    }\n    ... on DormaRegisterResponse {\n      success\n      publicSEId\n      token\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:49.7445878</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">997</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:49.7445878</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="registerDevice" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;vendorId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;deviceToken&quot;:&quot;${Param_DeviceToken}6GcSMumn82bsKYp-E:APA91bFuWhmH5Y0znnzeNJTV8TvzDGo_53CKbsKiy_VN4PMI0EJHE7nxGiZFh2yFw0906BLBYe4JOo6OKYsXDV6dCkJXc9DMWufd1m7zdBpqyEpF7mg2uQgNwH3bkzYDNosHLtJBnL9i&quot;,&quot;deviceName&quot;:&quot;${Param_DeviceName}&quot;,&quot;systemName&quot;:&quot;Android&quot;,&quot;systemVersion&quot;:&quot;9&quot;,&quot;model&quot;:&quot;flutter&quot;,&quot;keyVendor&quot;:&quot;${Param_VendorKey2}&quot;},&quot;query&quot;:&quot;mutation registerDevice($vendorId: String!, $deviceToken: String!, $deviceName: String!, $systemName: String!, $systemVersion: String!, $model: String!, $keyVendor: String) {\n  __typename\n  registerDevice(vendorId: $vendorId, deviceToken: $deviceToken, deviceName: $deviceName, systemName: $systemName, systemVersion: $systemVersion, model: $model, keyVendor: $keyVendor) {\n    __typename\n    ... on DigitalKeyResponse {\n      success\n    }\n    ... on AssaRegisterResponse {\n      success\n      invitationCode\n    }\n    ... on DormaRegisterResponse {\n      success\n      publicSEId\n      token\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-31T12:15:41.6816925</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJraWQiOiI0UVh3dlc5d3laa3V6OXV1QVUwLVlIZ3l4MGRQMGhhM3h2ZUszTUM2WTNVIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULkR2ckdGT2RRSlVLUnQ0bklYMWE5V1VZRGVQR3F4TnBwbS1wZUFVakVCWmMub2FyMmQxZTU4ZnNNaUxzbUEwaDciLCJpc3MiOiJodHRwczovL2lkZW50aXR5LmRldnRlc3QudmVnYXMvb2F1dGgyL2F1c3BoN2V6cDNHa2trOFdOMGg3IiwiYXVkIjoiaHR0cHM6Ly9hcGkubWdtcmVzb3J0cy5jb20iLCJzdWIiOiJzZXBlbG5jZHZ2ckBtZ21xYS5jb20iLCJpYXQiOjE2OTg3MzQyMjcsImV4cCI6MTY5ODczNzgyNywiY2lkIjoiMG9hMWRwbGdzMmRwVE5rekEwaDgiLCJ1aWQiOiIwMHUxdGV3ampiN0pIMmp0YTBoOCIsInNjcCI6WyJvZmZsaW5lX2FjY2VzcyIsIm9wZW5pZCIsInByb2ZpbGU6Y3JlYXRlIiwiYm9va2luZy5yb29tLnJlc3Y6dXBkYXRlIiwicHJvZmlsZTp1cGRhdGUiLCJyY3MucmNzOmFsbCIsImxveWFsdHk6cHJvZmlsZTpyZWFkIiwiZW1haWwiLCJib29raW5nLnJvb20ucmVzdjpzZWFyY2giLCJsb3lhbHR5OmJhbGFuY2VzOnJlYWQiLCJwcm9maWxlIiwiZGlyZWN0b3J5OnVwZGF0ZTpzZWxmIiwicHJvZmlsZTpyZWFkIiwicGhvbmUiLCJsb3lhbHR5OnN0b3Bjb2RlczpyZWFkIiwiaXRpbmVyYXJ5OnVwZGF0ZSIsIml0aW5lcmFyeTpjcmVhdGUiLCJyY3MucmNzOnFyY29kZSIsIml0aW5lcmFyeTpyZWFkIl0sImF1dGhfdGltZSI6MTY5ODczNDIyNSwiYmlydGhkYXRlIjoiMTk3OC0xMC0xNSIsImNvbS5tZ20uZW1haWxWZXJpZmllZCI6ZmFsc2UsImdyb3VwcyI6WyJtZ21fZ3Vlc3QiXSwiZ2l2ZW5fbmFtZSI6InNlcGZuamhjZ2siLCJjb20ubWdtLmlkIjoiMDB1MXRld2pqYjdKSDJqdGEwaDgiLCJtZ21fcm9sZSI6Imd1ZXN0IiwiY29tLm1nbS5pZGVudGl0eS52ZXJpZmllZCI6ZmFsc2UsIm1vYmlsZV9waG9uZSI6IisxNzAyODQ1MTQ3OCIsIm5hbWUiOiJzZXBmbmpoY2drIHNlcGxuY2R2dnIiLCJjb20ubWdtLmxveWFsdHkucGVycGV0dWFsX2VsaWdpYmxlIjpmYWxzZSwibWxpZmUiOiIxMDMwNTkzMTkiLCJjb20ubWdtLmdzZS5pZCI6IjEwMzI5MjM5MDYwNTAiLCJjb20ubWdtLmxveWFsdHkucGVycGV0dWFsX2VsaWdpYmxlX3Byb3BlcnRpZXMiOltdLCJmYW1pbHlfbmFtZSI6InNlcGxuY2R2dnIiLCJjb20ubWdtLmxveWFsdHkuZnJlZXBsYXlfYXZhaWxhYmxlIjpmYWxzZSwiZW1haWwiOiJzZXBlbG5jZHZ2ckBtZ21xYS5jb20iLCJjb20ubWdtLm1saWZlX251bWJlciI6IjEwMzA1OTMxOSJ9.qVT1_6s4TvmT2FjAEKhwhTMBF37t0PxN8CuugL7tfLKDuMhhKZHznEIGq-05WUcnp8lQAzXW8IROr1X5fa17OonqO6L8pbsjZYpgXUA-r-wsL-jJxr6xLwqH0CFLCgoBsCBTKawzbSHgBq-G0E4tARa_g6s_SceOKqiJ6SQZjtWf50LGZcL9KCMMRi5C43tLMgWufuOBxOcWLs8HhrWXtKifdUf9ZSNasYdlvw_U1TRxixMI2NxI2r6023duldpPlMsLzxDPY0mNIHrbrvbOuVWJusEnL8QBFqa8ufuusv4xP8ty6-IeDLABABQiSqKPlYPvd-hkB_om-LB4vETarA</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">35d3f682-29d6-4609-9b96-bb0b5be57cec|5e361458-92a7-4c4d-b13e-56b760de2dc7</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">998</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-31T12:15:41.6827065</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="registerDevice" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;vendorId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;deviceToken&quot;:&quot;${Param_DeviceToken}6GcSMumn82bsKYp-E:APA91bFuWhmH5Y0znnzeNJTV8TvzDGo_53CKbsKiy_VN4PMI0EJHE7nxGiZFh2yFw0906BLBYe4JOo6OKYsXDV6dCkJXc9DMWufd1m7zdBpqyEpF7mg2uQgNwH3bkzYDNosHLtJBnL9i&quot;,&quot;deviceName&quot;:&quot;${Param_DeviceName}&quot;,&quot;systemName&quot;:&quot;Android&quot;,&quot;systemVersion&quot;:&quot;9&quot;,&quot;model&quot;:&quot;flutter&quot;,&quot;keyVendor&quot;:&quot;${Param_VendorKey1}&quot;},&quot;query&quot;:&quot;mutation registerDevice($vendorId: String!, $deviceToken: String!, $deviceName: String!, $systemName: String!, $systemVersion: String!, $model: String!, $keyVendor: String) {\n  __typename\n  registerDevice(vendorId: $vendorId, deviceToken: $deviceToken, deviceName: $deviceName, systemName: $systemName, systemVersion: $systemVersion, model: $model, keyVendor: $keyVendor) {\n    __typename\n    ... on DigitalKeyResponse {\n      success\n    }\n    ... on AssaRegisterResponse {\n      success\n      invitationCode\n    }\n    ... on DormaRegisterResponse {\n      success\n      publicSEId\n      token\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:49.7445878</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">997</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:49.7445878</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RecommendationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;idType&quot;:&quot;mLifeId&quot;,&quot;recommendationListId&quot;:&quot;103059319&quot;,&quot;propertyId&quot;:&quot;44e610ab-c209-4232-8bb4-51f7b9b13a75&quot;,&quot;maxRecommendations&quot;:20,&quot;startsAt&quot;:&quot;2023-10-30&quot;,&quot;endsAt&quot;:&quot;2023-11-06&quot;,&quot;numberOfGuests&quot;:1},&quot;query&quot;:&quot;query RecommendationList($idType: String!, $propertyId: String!, $maxRecommendations: Int!, $startsAt: String!, $endsAt: String!, $numberOfGuests: Int!, $recommendationListId: String!) {\n  __typename\n  recommendationList(idType: $idType, propertyId: $propertyId, maxRecommendations: $maxRecommendations, startsAt: $startsAt, endsAt: $endsAt, numberOfGuests: $numberOfGuests, id: $recommendationListId) {\n    __typename\n    modelVersion\n    userType\n    recommendations {\n      __typename\n      ... on Restaurant {\n        priceRange\n        cuisine\n        isSevenRoomsRestaurant\n        id\n        path\n        name\n        propertyId\n        tags\n        reopenDate\n        images {\n          __typename\n          ...ImagesFields\n        }\n        contentType\n      }\n      ... on EntertainmentSchedule {\n        path\n        propertyId\n        name\n        id\n        image {\n          __typename\n          url\n        }\n        price {\n          __typename\n          startingPrice\n        }\n        showEventInfo\n      }\n    }\n  }\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mgm-nonprod-qa.apigee.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rec/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:39:27.1977779</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1436</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">mgm-nonprod-qa.apigee.net</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:39:27.1977779</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="212437359">modelVersion</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sendDigitalKeyTelemetry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;body&quot;:[{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;register_failed&quot;,&quot;message&quot;:&quot;Failed to register for assa&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}}]},&quot;query&quot;:&quot;mutation sendDigitalKeyTelemetry($body: [SendTelemetryInput!]!) {\n  __typename\n  sendDigitalKeyTelemetry(body: $body) {\n    __typename\n    success\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:39:47.833286</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">401</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:39:47.833286</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sendDigitalKeyTelemetry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;body&quot;:[{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Assa start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;dorma&quot;,&quot;timestamp&quot;:&quot;2023-10-30T07:58:43.000Z&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;terminate_start&quot;,&quot;message&quot;:&quot;Dorma unregister start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Assa start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;initialize_success&quot;,&quot;message&quot;:&quot;Dorma start success&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;register_start&quot;,&quot;message&quot;:&quot;Assa register start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey1}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}},{&quot;deviceId&quot;:&quot;${Param_VendorId}91d894c740f3f5542ba8b9cc8bc&quot;,&quot;interaction&quot;:&quot;update_start&quot;,&quot;message&quot;:&quot;Dorma update start&quot;,&quot;context&quot;:{&quot;vendor&quot;:&quot;${Param_VendorKey2}&quot;,&quot;timestamp&quot;:&quot;${Param_Timestamp}&quot;}}]},&quot;query&quot;:&quot;mutation sendDigitalKeyTelemetry($body: [SendTelemetryInput!]!) {\n  __typename\n  sendDigitalKeyTelemetry(body: $body) {\n    __typename\n    success\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:17.3432995</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}|${__UUID}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1479</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:38:17.3432995</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_properties" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_properties($destination: String, $search: String) {\n  __typename\n  getProperties(destination: $destination, queryParams: {search: $search}) {\n    __typename\n    ...PropertyFields\n  }\n}\n\nfragment PropertyFields on Property {\n  __typename\n  id\n  propertyId\n  propertyKey\n  operaPropertyCode\n  name\n  shortName\n  images {\n    __typename\n    ...ImagesFields\n  }\n  region\n  regionName\n  timezone\n  digitalKeyVendor\n  phoneNumber {\n    __typename\n    reservationsNumber\n  }\n  websiteUrl\n}\n\nfragment ImagesFields on Images {\n  __typename\n  overview {\n    __typename\n    url\n  }\n  colorVectorLogo\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:40:02.7545544</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="x-mgm-source" elementType="Header">
                  <stringProp name="Header.name">x-mgm-source</stringProp>
                  <stringProp name="Header.value">mgmri</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-mgm-correlation-id" elementType="Header">
                  <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
                  <stringProp name="Header.value">${Corr_CorrelationId}</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="x-mgm-channel" elementType="Header">
                  <stringProp name="Header.name">x-mgm-channel</stringProp>
                  <stringProp name="Header.value">mobile</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-version" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-version</stringProp>
                  <stringProp name="Header.value">8.14.0</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">686</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="apollographql-client-name" elementType="Header">
                  <stringProp name="Header.name">apollographql-client-name</stringProp>
                  <stringProp name="Header.value">mobile-indigo</stringProp>
                </elementProp>
                <elementProp name="sentry-trace" elementType="Header">
                  <stringProp name="Header.name">sentry-trace</stringProp>
                  <stringProp name="Header.value">00000000000000000000000000000000-0000000000000000-0</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-30T13:40:02.7545544</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1223801559">getProperties</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TXN_03_Mobile_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v2/auth/logout" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;refresh_token&quot;:&quot;wVLhININGQcErllXuCVfP42oGMEEQwjp9WwRl1LAqoY&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">qa4-api.devtest.vegas</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T13:38:28.1366386</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">MGM:Flutter-Indigo/8.14.0 (Android 9; AOSP on IA Emulator Build/6736742)</stringProp>
                </elementProp>
                <elementProp name="x-api-key" elementType="Header">
                  <stringProp name="Header.name">x-api-key</stringProp>
                  <stringProp name="Header.value">daZZuEYyciaRMLvYTqToL4u6fFfQJOrYTMM8ZpE4</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">63</stringProp>
                </elementProp>
                <elementProp name="x-wants-mock" elementType="Header">
                  <stringProp name="Header.name">x-wants-mock</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="integration_auth" elementType="Header">
                  <stringProp name="Header.name">integration_auth</stringProp>
                  <stringProp name="Header.value">bypass-automation</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${Corr_AccessToken}</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Header">
                  <stringProp name="Header.name">host</stringProp>
                  <stringProp name="Header.value">qa4-api.devtest.vegas</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-acf-sensor-data" elementType="Header">
                  <stringProp name="Header.name">x-acf-sensor-data</stringProp>
                  <stringProp name="Header.value">3,a,wBKoT2ta8kH8H0gBx1ZQ1bT+j/7exhtGOhCyHgxse+UDS7Bn8qAFE/IWtJLjK/h7QwQfanWFGiM3quWDq9MxxSq+Ev9xqhw7NYwZUmHxrpdpLuiA3Nqz9W+NLWKlavhLQVqMryN3TOdPiveiOojFbxWxy/CiK9S4f6PYl9Jlu/w=,MfRssd5UgOPRSzOOnWGrKdeigpmPtpMxhySv9LFubA6jT9ASHhrtSJMtFbmO2i63CA1OPR5usRhuT7x1lO4R7vr/jw/zQzArgJN8xnn/aBCGYn8LWlUKiG3MNmfAvPj3cKgE9ywF2XHBTNAbG4QzLElg5UtYz1s6dzxxo7wM26E=$bc3OhNlHWdEoAiOf9wqEYmfHqggYBLwCfIPo35g8vgCmGyyDZRhOHA9NbOZaXTb1E1teVs0J61FEKOck5JNJwGUnqr+k5tWwgORVy+MV8xtw2ECkUbtAZJI8CkrBTVooYYNnQ1UdUiDDiPzN2bBxz99EV7KvU3qI+W6XTfkgyENlJGGf7ONc6VYsdFk8j0Zetf3M43aijWPmsQaHjz9EUajJr9XAEqeJVDSzYbbZRUR3euQnH/qTLSOzFLXhwyVI6I8mCPzDBUVo6D2mbpnFbKI8ns1dL7ENgT/XlFwVnzBUAHCyHvwLzVkYXPccaWeSi2vF7ggPwQN/vQSuN7SMPTt08rnLGuZWoLtRlwvc1HBGZZIOo0yTc7GyttFZ0Vjew5YZRsg/CYAsx5mvaoxTevU2bywEekXJXi4lBknGDRpYI+bWgtBsc0zXGswqTEDDM0S/hw6JAJvxcHagtHMIRz+gLh2B6/LGQ+Bfw/ocEpgxDE120rXpQ7jTQxZFEWmNs0CPURJQApulzgMl45j4AbVcQ7XnVd3b5QbEM845TlcT2ZZwwJNzZtgCk8aZNLLbpQhxcv5I2hhGN43iu5Em8ToOAOHLDGXnM6EqsDc5jC59b0USPCVfknkBRm/sS8zVky9JdnFNSNxJMgTtBoqjelvaSiyurwgg6Gx00wzcKH0mS6FjU63dtb7SpC75AlwhxPeWmAtRnC3kdF2L1J/fGxYBR/tAURfOxb54zNkxxQIPIg7QIDJs9LrqHU31U9+6I9fNr4qSZM461KRiYIEQEZTYUXLyeJFP5Wt8ZXxwF5n4Cg2pR0rihS1+wJrQtL7Bfkp9JPODcy9VtB1XlnxCHHUNMkieLoJ/ujNBBGh7jWgSbYPC9v7Ie2AWDmYTYdAVFk+TeTba3Uz4DN9vjZLBc66OEjO68ORuJ0gkVJSe3ODiATmzHJlriLeuot8IBI9VY2ba0USkpy+ucMyvSu/sc1xAfWUaCRAGr76jYVRZ7gD3AnTaexL2yImyh/cbKhai1ziZT48t8EI+WeGHFtpVK9JpurpFbTVck7ZgbK+O5vYnXXZQfd5+6YpKy9cxb3K9JnkCZoWt7RWcEARS/0q41zovKqpSTSXrEfJYFbIhipD3ykH25lzf2qmW3OvHxPds7DSJedg/n3NNnQv7+GChQ5Og9hhKiSh9WjwlwKuU69sY2r8sfH9Lgbnmhojv+CuGVGjHRGFPIDUDOQk95/snZEk3NKPc0y1Z5DmV2vCnh+3avzs9i1kLCxfeXs7Ask4qa01rTjswpPRJq4tYAZCRNQNUiOCaTZuIJGRLFBgJUuHPEE96omH/uDpnJiCAjssJXQmYpHT6c9YalwJP/j2nlj2t+EdIQTg47OtYHe868E3rPpBUvsw6le6AxQnkeEL7RbfXqlMuPuTjEE35fATvgySMDKWsarLeHy+aLedWPp6D8Wg37rDrEw4tEnlMrWmlk88kYgCC1/R5ZrrJhEtsICfg74/Q3tX3lzyvBKJLIAtdPcvQIGQ8BuGMY/KchaBm3I4fPporI0xqFP9sRlfOPUnVk74xULcY/jLfySMmUgCgvwJC1JEltQFp3qy3m6Vsuk2+TGt/+G/GsKSgE2AoYXpsQKwQu4lPwb3lvoNfwxMxQ5lQuRYDuw6Tp49mCFw4y0mIOyQhHcP7iD/XzPGjJl4GI4cnHr7Y7I5Y2dFh6no5G0g505fHDcDR5GomFL1Oh+wHcNHDvI5qhwB/rLYDsTvNVmyDYzZ1g7T3npAGuvXyjtN7IyKGGHA4ZGqiS+Yru62ZhGW5hNHjBJEn8Qg/Xs2YipJZ4UhuVOna6Oj1LPcW3epOgoLESXqw4gYJQGVcl9gBcocUeQlrNU3sda40EgdLP4S1qE61+t02/nc9tSIBC+iIeigwmeQigxmPaSUGllHcVhtGqhGA2A+0LaVf6IeTxsDFVemvU7/NTOrLgRdqLHOOoH2tm1K3S2o5vPYekqSQSWZmHIS788crLclbO2iO5IuMQym/gtWL5nOeddL6YAsqzqezjA5BqT72WpQlhkQRp9C3YdnMkYLxts1iug5yXW5vrIRwAaGDLi372lq1jseaK6TBtThZK9BsUx4dMNlZckLGzw9YW+9nwHq5ApfoKQehX8azMB20J5g8mEB/nw1ClQPeui/l5BJwVasc374XeRgP1B3pjzQOwpHq9x7FsImLdNJgEkXLJGc5Y7zEGBGemeV0+FxZ/FxetPtFytChwQdiBNj73sxf1nODkXlJaWLPqPQrXN/+pQQZDMBbo2NC3oTGlGVEic2hYGA94rWyFYhl2I5lez1KnNS4WrB5DI2ZfX7rb/vldCsLm8BDt3+0btW1dAov2khkQQN5K01Gwtr1mQ5jJljb1TX21om0pukXcsoAxEkAG0R5kJ04O0Ih27zdmOuph1UhWXCGM/n3P23KhV2y7cn9ILB1MZTdvuYgZIGuQtLCJk7EUaX+tzcTUeW8dEkEUY0JozlXUZtk4K2H2hrTs1uF+WcKoIYPI0M8Ax7eKVh5mv2r760rfU19ITkJSdwX3Wq3dItk$1000,1000,1000$$</stringProp>
                </elementProp>
                <elementProp name="x-api-version" elementType="Header">
                  <stringProp name="Header.name">x-api-version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-10-27T13:38:28.1376521</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${Pacing}</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
